name: CI Pipeline

on:
  push:
    branches:
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: guest
          POSTGRES_PASSWORD: guest
          POSTGRES_DB: testdb
        ports:
          - 5432:5432

      rabbitmq:
        image: rabbitmq:management
        ports:
          - 5672:5672
          - 15672:15672

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --no-restore --configuration Release

      - name: Run tests with coverage
        run: |
          dotnet test --collect:"XPlat Code Coverage" --logger "trx;LogFileName=TestResults.trx" | tee logfile.txt

      - name: Upload test logs
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: logfile.txt

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: TestResults/

      - name: Security scan
        uses: snyk/actions/dotnet@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Verify build artifacts
        run: |
          dotnet publish --configuration Release --output publish
          dotnet publish --configuration Release --output publish-self-contained --self-contained true -r linux-x64
